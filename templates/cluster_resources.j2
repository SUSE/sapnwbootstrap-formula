{%- set data = pillar.cluster.configure.template.parameters %}
{%- set cloud_provider = grains['cloud_provider'] %}
{%- set sid = data.sid.upper() %}
{%- set ascs_instance = '{:0>2}'.format(data.ascs_instance) %}
{%- set ers_instance = '{:0>2}'.format(data.ers_instance) %}
{%- set ascs_device = data.ascs_device %}
{%- set ers_device = data.ers_device %}
{%- set ascs_fstype = data.ascs_fstype %}
{%- set ers_fstype = data.ers_fstype %}
{%- set ascs_ip_address = data.ascs_ip_address %}
{%- set ers_ip_address = data.ers_ip_address %}
{%- set ascs_virtual_host = data.ascs_virtual_host %}
{%- set ers_virtual_host = data.ers_virtual_host %}

# Platform dependant (stonith, virtual ip address, cib options, etc) resource

{%- if cloud_provider == "amazon-web-services" %}

property cib-bootstrap-options: \
  stonith-enabled="true" \
  stonith-action="off" \
  stonith-timeout="600s"

rsc_defaults rsc-options: \
	resource-stickiness=1 \
	migration-threshold=3

op_defaults op-options: \
	timeout=600 \
	record-pending=true

primitive res_aws_stonith_{{ sid }} stonith:external/ec2 \
  params tag={{ data.instance_tag }} profile={{ data.cluster_profile}} \
  op start interval=0 timeout=180 \
  op stop interval=0 timeout=180 \
  op monitor interval=120 timeout=60 \
  meta target-role=Started

primitive rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} ocf:suse:aws-vpc-move-ip \
  params ip={{ ascs_ip_address }} routing_table={{ data.route_table}} \
  interface={{ pillar.cluster.interface|default('eth0')|json }} profile={{ data.cluster_profile}} \
  op start interval=0 timeout=180 \
  op stop interval=0 timeout=180 \
  op monitor interval=60 timeout=60

primitive rsc_ip_{{ sid }}_ERS{{ ers_instance }} ocf:suse:aws-vpc-move-ip \
  params ip={{ ers_ip_address }} routing_table={{ data.route_table}} \
  interface={{ pillar.cluster.interface|default('eth0')|json }} profile={{ data.cluster_profile}} \
  op start interval=0 timeout=180 \
  op stop interval=0 timeout=180 \
  op monitor interval=60 timeout=60

{%- elif cloud_provider == "google-cloud-platform" %}

# This stonith resource will be duplicated for each node in the cluster
primitive rsc_gcp_stonith_{{ sid }}_{{ grains['host'] }} stonith:fence_gce \
    params action=reboot plug={{ grains['host'] }} pcmk_host_map="{{ grains['host'] }}:{{ grains['host'] }}" \
    meta target-role=Started

primitive rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} ocf:heartbeat:gcp-vpc-move-route \
    params ip={{ data.ascs_ip_address }} vpc_network={{ data.vpc_network_name }} route_name={{ data.route_table }} \
    op start interval=0 timeout=180 \
    op stop interval=0 timeout=180 \
    op monitor interval=60 timeout=60

primitive rsc_ip_{{ sid }}_ERS{{ ers_instance }} ocf:heartbeat:gcp-vpc-move-route \
    params ip={{ data.ers_ip_address }} vpc_network={{ data.vpc_network_name }} route_name={{ data.route_table }} \
    op start interval=0 timeout=180 \
    op stop interval=0 timeout=180 \
    op monitor interval=60 timeout=60

{%- else %}

{%- if cloud_provider == "microsoft-azure" %}

primitive nc_{{ sid }}_ASCS anything \
  params binfile="/usr/bin/socat" cmdline_options="-U TCP-LISTEN:620{{ ascs_instance }},backlog=10,fork,reuseaddr /dev/null" \
  op monitor timeout=20s interval=10 depth=0

primitive nc_{{ sid }}_ERS anything \
  params binfile="/usr/bin/socat" cmdline_options="-U TCP-LISTEN:621{{ ers_instance }},backlog=10,fork,reuseaddr /dev/null" \
  op monitor timeout=20s interval=10 depth=0

{%- endif %}

primitive rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} IPaddr2 \
  params ip={{ ascs_ip_address}} \
  op monitor interval=10s timeout=20s

primitive rsc_ip_{{ sid }}_ERS{{ ers_instance }} IPaddr2 \
  params ip={{ ers_ip_address }} \
  op monitor interval=10s timeout=20s

{%- endif %}

# SAP Netweaver related resources

primitive rsc_fs_{{ sid }}_ASCS{{ ascs_instance }} Filesystem \
  params device="{{ ascs_device }}" directory="/usr/sap/{{ sid }}/ASCS{{ ascs_instance }}" fstype={{ ascs_fstype|default("xfs") }} \
  {%- if cloud_provider == "amazon-web-services" %}
  options="rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2" \
  {%- endif %}
  op start timeout=60s interval=0 \
  op stop timeout=60s interval=0 \
  op monitor interval=20s timeout=40s

primitive rsc_sap_{{ sid }}_ASCS{{ ascs_instance }} SAPInstance \
  operations $id=rsc_sap_{{ sid }}_ASCS{{ ascs_instance }}-operations \
  op monitor interval=120 timeout=60 on_fail=restart \
  params InstanceName={{ sid }}_ASCS{{ ascs_instance }}_{{ ascs_virtual_host }} \
     START_PROFILE="/sapmnt/{{ sid }}/profile/{{ sid }}_ASCS{{ ascs_instance }}_{{ ascs_virtual_host }}" \
     AUTOMATIC_RECOVER=false \
  meta resource-stickiness=5000 failure-timeout=60 \
     migration-threshold=1 priority=10

group grp_{{ sid }}_ASCS{{ ascs_instance }} \
  rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} rsc_fs_{{ sid }}_ASCS{{ ascs_instance }} rsc_sap_{{ sid }}_ASCS{{ ascs_instance }} {% if cloud_provider == "microsoft-azure" %} nc_{{ sid }}_ASCS {% endif %} \
  meta resource-stickiness=3000

primitive rsc_fs_{{ sid }}_ERS{{ ers_instance }} Filesystem \
  params device="{{ ers_device }}" directory="/usr/sap/{{ sid }}/ERS{{ ers_instance }}" fstype={{ ers_fstype|default("xfs") }} \
  {%- if cloud_provider == "amazon-web-services" %}
  options="rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2" \
  {%- endif %}
  op start timeout=60s interval=0 \
  op stop timeout=60s interval=0 \
  op monitor interval=20s timeout=40s

primitive rsc_sap_{{ sid }}_ERS{{ ers_instance }} SAPInstance \
  operations $id=rsc_sap_{{ sid }}_ERS{{ ers_instance }}-operations \
  op monitor interval=120 timeout=60 on_fail=restart \
  params InstanceName={{ sid }}_ERS{{ ers_instance }}_{{ ers_virtual_host }} \
        START_PROFILE="/sapmnt/{{ sid }}/profile/{{ sid }}_ERS{{ ers_instance }}_{{ ers_virtual_host }}" \
        AUTOMATIC_RECOVER=false IS_ERS=true \
  meta priority=1000

group grp_{{ sid }}_ERS{{ ers_instance }} \
  rsc_ip_{{ sid }}_ERS{{ ers_instance }} rsc_fs_{{ sid }}_ERS{{ ers_instance }} rsc_sap_{{ sid }}_ERS{{ ers_instance }} {% if cloud_provider == "microsoft-azure" %} nc_{{ sid }}_ERS {% endif %}

colocation col_sap_{{ sid }}_no_both -5000: grp_{{ sid }}_ERS{{ ers_instance }} grp_{{ sid }}_ASCS{{ ascs_instance }}
location loc_sap_{{ sid }}_failover_to_ers rsc_sap_{{ sid }}_ASCS{{ ascs_instance }} \
  rule 2000: runs_ers_{{ sid }} eq 1

order ord_sap_{{ sid }}_first_start_ascs Optional: rsc_sap_{{ sid }}_ASCS{{ ascs_instance }}:start \
  rsc_sap_{{ sid }}_ERS{{ ers_instance }}:stop symmetrical=false
