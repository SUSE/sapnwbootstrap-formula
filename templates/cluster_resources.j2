{%- set data = pillar.cluster.configure.template.parameters %}
{%- set cloud_provider = grains['cloud_provider'] %}
{%- set sid = data.sid.upper() %}
{%- set sid_lower = sid.lower() %}
{%- set ascs_instance = '{:0>2}'.format(data.ascs_instance) %}
{%- set ers_instance = '{:0>2}'.format(data.ers_instance) %}
{%- set ascs_device = data.ascs_device %}
{%- set ers_device = data.ers_device %}
{%- set ascs_fstype = data.ascs_fstype %}
{%- set ers_fstype = data.ers_fstype %}
{%- set ascs_ip_address = data.ascs_ip_address %}
{%- set ers_ip_address = data.ers_ip_address %}
{%- set ascs_virtual_host = data.ascs_virtual_host %}
{%- set ers_virtual_host = data.ers_virtual_host %}
{%- set monitoring_enabled = pillar.cluster.monitoring_enabled|default(False) %}
{%- set sapmnt_path = data.sapmnt_path|default('/sapmnt') %}

{%- if data.ensa_version is defined %}
{%- set ensa_version = data.ensa_version|int %}
{%- elif 'ensa_version_'~sid_lower~'_'~ascs_instance in grains %}
{%- set ensa_version = grains['ensa_version_'~sid_lower~'_'~ascs_instance]|int %}
{%- elif 'ensa_version_'~sid_lower~'_'~ers_instance in grains %}
{%- set ensa_version = grains['ensa_version_'~sid_lower~'_'~ers_instance]|int %}
{%- else %}
{%- set ensa_version = 1 %}
{%- endif %}

{%- if cloud_provider == "amazon-web-services" %}
{%- set native_fencing = data.native_fencing|default(True) %}
{%- set vip_mechanism = data.virtual_ip_mechanism|default("route") %}
{%- elif cloud_provider == "google-cloud-platform" %}
{%- set native_fencing = data.native_fencing|default(True) %}
{%- set vip_mechanism = data.virtual_ip_mechanism|default("load-balancer") %}
{%- elif cloud_provider == "microsoft-azure" %}
{%- set native_fencing = data.native_fencing|default(False) %}
{%- set vip_mechanism = data.virtual_ip_mechanism|default("load-balancer") %}
{%- else %}{# all other cases like openstack and libvirt #}
{%- set native_fencing = data.native_fencing|default(False) %}
{%- set vip_mechanism = data.virtual_ip_mechanism|default("vip-only") %}
{%- endif %}
{%- set cidr_netmask = "cidr_netmask="~data.virtual_ip_mask|default("32") %}
{%- set nic = "nic="~pillar.cluster.interface|json if pillar.cluster.interface is defined else "" %}

###########
# Defaults
###########

{%- if cloud_provider == "amazon-web-services" %}

  rsc_defaults rsc-options: \
    resource-stickiness=1 \
    migration-threshold=3

  op_defaults op-options: \
    timeout=600 \
    record-pending=true
{%- endif %}

#####################################################
# Fencing agents - Native agents for cloud providers
#####################################################

{%- if native_fencing %}
  {%- if cloud_provider == "amazon-web-services" %}
    property cib-bootstrap-options: \
      stonith-enabled="true" \
      stonith-action="off" \
      stonith-timeout="600s"

    primitive res_aws_stonith_{{ sid }} stonith:external/ec2 \
      params tag={{ data.instance_tag }} profile={{ data.cluster_profile}} \
      op start interval=0 timeout=180 \
      op stop interval=0 timeout=180 \
      op monitor interval=120 timeout=60 \
      meta target-role=Started

  {%- elif cloud_provider == "google-cloud-platform" %}
    property $id="cib-bootstrap-options" \
      stonith-enabled="true" \
      stonith-timeout="150s"

    # This stonith resource will be duplicated for each node in the cluster
    primitive rsc_gcp_stonith_{{ sid }}_{{ grains['host'] }} stonith:fence_gce \
      params plug={{ grains['gcp_instance_name'] }} pcmk_host_map="{{ grains['host'] }}:{{ grains['gcp_instance_name'] }}" \
      meta target-role=Started

  {%- elif cloud_provider == "microsoft-azure" %}
    property $id="cib-bootstrap-options" \
      stonith-enabled="true" \
      concurrent-fencing=true

    primitive rsc_azure_stonith_{{ sid }} stonith:fence_azure_arm \
      params subscriptionId={{ data.azure_subscription_id }} resourceGroup={{ data.azure_resource_group_name }} tenantId={{ data.azure_tenant_id }} login={{ data.azure_fence_agent_app_id }} passwd="{{ data.azure_fence_agent_client_secret }}" pcmk_monitor_retries=4 pcmk_action_limit=3 power_timeout=240 pcmk_reboot_timeout=900 \
      op monitor interval=3600 timeout=120 \
      meta target-role=Started
  {%- endif %}
{%- endif %}

######################################
# Floating IP address resource agents
######################################

{%- if cloud_provider == "amazon-web-services" %}
  {%- if vip_mechanism == "route" %}
    primitive rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} ocf:suse:aws-vpc-move-ip \
      params ip={{ ascs_ip_address }} routing_table={{ data.route_table}} \
      interface={{ pillar.cluster.interface|default('eth0')|json }} profile={{ data.cluster_profile}} \
      op start interval=0 timeout=180 \
      op stop interval=0 timeout=180 \
      op monitor interval=60 timeout=60

    primitive rsc_ip_{{ sid }}_ERS{{ ers_instance }} ocf:suse:aws-vpc-move-ip \
      params ip={{ ers_ip_address }} routing_table={{ data.route_table}} \
      interface={{ pillar.cluster.interface|default('eth0')|json }} profile={{ data.cluster_profile}} \
      op start interval=0 timeout=180 \
      op stop interval=0 timeout=180 \
      op monitor interval=60 timeout=60
  {%- endif %}

{%- elif cloud_provider == "google-cloud-platform" %}

  {%- if vip_mechanism == "load-balancer" %}
    primitive rsc_socat_{{ sid }}_ASCS{{ ascs_instance }} anything \
      params binfile="/usr/bin/socat" \
      cmdline_options="-U TCP-LISTEN:620{{ ascs_instance }},backlog=10,fork,reuseaddr /dev/null" \
      op monitor timeout=20s interval=10 \
      op_params depth=0

    primitive rsc_socat_{{ sid }}_ERS{{ ers_instance }} anything \
      params binfile="/usr/bin/socat" \
      cmdline_options="-U TCP-LISTEN:621{{ ers_instance }},backlog=10,fork,reuseaddr /dev/null" \
      op monitor timeout=20s interval=10 \
      op_params depth=0

  {%- elif vip_mechanism == "route" %}
    primitive rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} ocf:heartbeat:gcp-vpc-move-route \
      params ip={{ data.ascs_ip_address }} vpc_network={{ data.vpc_network_name }} route_name={{ data.ascs_route_name|default("nw-ascs-"~sid~"-route") }} \
      op start interval=0 timeout=180 \
      op stop interval=0 timeout=180 \
      op monitor interval=60 timeout=60

    primitive rsc_ip_{{ sid }}_ERS{{ ers_instance }} ocf:heartbeat:gcp-vpc-move-route \
      params ip={{ data.ers_ip_address }} vpc_network={{ data.vpc_network_name }} route_name={{ data.ers_route_name|default("nw-ers-"~sid~"-route") }} \
      op start interval=0 timeout=180 \
      op stop interval=0 timeout=180 \
      op monitor interval=60 timeout=60
  {%- endif %}

{%- elif cloud_provider == "microsoft-azure" %}

  {%- if vip_mechanism == "load-balancer" %}
    primitive rsc_socat_{{ sid }}_ASCS{{ ascs_instance }} azure-lb \
      params port=620{{ ascs_instance }} \
      op monitor timeout=20s interval=10 depth=0

    primitive rsc_socat_{{ sid }}_ERS{{ ers_instance }} azure-lb \
      params port=621{{ ers_instance }} \
      op monitor timeout=20s interval=10 depth=0
  {%- endif %}

{%- endif %}

{%- if vip_mechanism == "vip-only" or vip_mechanism == "load-balancer" %}
  primitive rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} IPaddr2 \
    params ip={{ ascs_ip_address }} {{ cidr_netmask }} {{ nic }} \
    op monitor interval=10s timeout=20s

  primitive rsc_ip_{{ sid }}_ERS{{ ers_instance }} IPaddr2 \
    params ip={{ ers_ip_address }} {{ cidr_netmask }} {{ nic }} \
    op monitor interval=10s timeout=20s
{%- endif %}

##########################
# SAP Netweaver resources
##########################

primitive rsc_fs_{{ sid }}_ASCS{{ ascs_instance }} Filesystem \
  params device="{{ ascs_device }}" directory="/usr/sap/{{ sid }}/ASCS{{ ascs_instance }}" fstype={{ ascs_fstype|default("xfs") }} \
  {%- if cloud_provider == "amazon-web-services" %}
  options="rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2" \
  {%- endif %}
  op start timeout=60s interval=0 \
  op stop timeout=60s interval=0 \
  op monitor interval=20s timeout=40s

primitive rsc_sap_{{ sid }}_ASCS{{ ascs_instance }} SAPInstance \
  operations $id=rsc_sap_{{ sid }}_ASCS{{ ascs_instance }}-operations \
  op monitor interval=11 timeout=60 on-fail=restart \
  params InstanceName={{ sid }}_ASCS{{ ascs_instance }}_{{ ascs_virtual_host }} \
    START_PROFILE="{{ sapmnt_path }}/{{ sid }}/profile/{{ sid }}_ASCS{{ ascs_instance }}_{{ ascs_virtual_host }}" \
    AUTOMATIC_RECOVER=false \
  meta resource-stickiness=5000 {% if ensa_version == 1 %}failure-timeout=60 migration-threshold=1 priority=10{%- endif %}

group grp_{{ sid }}_ASCS{{ ascs_instance }} \
  rsc_ip_{{ sid }}_ASCS{{ ascs_instance }} \
  rsc_fs_{{ sid }}_ASCS{{ ascs_instance }} \
  rsc_sap_{{ sid }}_ASCS{{ ascs_instance }} \
  {%- if vip_mechanism == "load-balancer" %}
  rsc_socat_{{ sid }}_ASCS{{ ascs_instance }} \
  {%- endif %}
  {%- if monitoring_enabled %}
  rsc_exporter_{{ sid }}_ASCS{{ ascs_instance }} \
  {%- endif %}
  meta resource-stickiness=3000

primitive rsc_fs_{{ sid }}_ERS{{ ers_instance }} Filesystem \
  params device="{{ ers_device }}" directory="/usr/sap/{{ sid }}/ERS{{ ers_instance }}" fstype={{ ers_fstype|default("xfs") }} \
  {%- if cloud_provider == "amazon-web-services" %}
  options="rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2" \
  {%- endif %}
  op start timeout=60s interval=0 \
  op stop timeout=60s interval=0 \
  op monitor interval=20s timeout=40s

primitive rsc_sap_{{ sid }}_ERS{{ ers_instance }} SAPInstance \
  operations $id=rsc_sap_{{ sid }}_ERS{{ ers_instance }}-operations \
  op monitor interval=11 timeout=60 on-fail=restart \
  params InstanceName={{ sid }}_ERS{{ ers_instance }}_{{ ers_virtual_host }} \
    START_PROFILE="{{ sapmnt_path }}/{{ sid }}/profile/{{ sid }}_ERS{{ ers_instance }}_{{ ers_virtual_host }}" \
    AUTOMATIC_RECOVER=false IS_ERS=true {% if ensa_version == 1 %}meta priority=1000{%- endif %}

group grp_{{ sid }}_ERS{{ ers_instance }} \
  rsc_ip_{{ sid }}_ERS{{ ers_instance }} \
  rsc_fs_{{ sid }}_ERS{{ ers_instance }} \
  rsc_sap_{{ sid }}_ERS{{ ers_instance }} \
  {%- if vip_mechanism == "load-balancer" %}
  rsc_socat_{{ sid }}_ERS{{ ers_instance }} \
  {%- endif %}
  {%- if monitoring_enabled %}
  rsc_exporter_{{ sid }}_ERS{{ ers_instance }}
  {%- endif %}

colocation col_sap_{{ sid }}_not_both -5000: grp_{{ sid }}_ERS{{ ers_instance }} grp_{{ sid }}_ASCS{{ ascs_instance }}
{%- if ensa_version == 1 %}
location loc_sap_{{ sid }}_failover_to_ers rsc_sap_{{ sid }}_ASCS{{ ascs_instance }} \
  rule 2000: runs_ers_{{ sid }} eq 1
{%- endif %}

order ord_sap_{{ sid }}_first_start_ascs Optional: rsc_sap_{{ sid }}_ASCS{{ ascs_instance }}:start \
  rsc_sap_{{ sid }}_ERS{{ ers_instance }}:stop symmetrical=false

#########################################
# prometheus-sap_host_exporter resources
#########################################

{%- if monitoring_enabled %}
  primitive rsc_exporter_{{ sid }}_ASCS{{ ascs_instance }} systemd:prometheus-sap_host_exporter@{{ sid }}_ASCS{{ ascs_instance }} \
    op start interval=0 timeout=100 \
    op stop interval=0 timeout=100 \
    op monitor interval=10 \
    meta target-role=Started

  primitive rsc_exporter_{{ sid }}_ERS{{ ers_instance }} systemd:prometheus-sap_host_exporter@{{ sid }}_ERS{{ ers_instance }} \
    op start interval=0 timeout=100 \
    op stop interval=0 timeout=100 \
    op monitor interval=10 \
    meta target-role=Started
{%- endif %}
